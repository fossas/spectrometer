# Build, test, and upload artifacts for linux/macos/windows
#
# Linux builds are done under our haskell-static-alpine image (see: fossas/haskell-static-alpine)
# macOS builds use ghcup to install ghc/cabal
# windows builds use choco to install ghc/cabal
#
# Binaries on each platform are stripped. This removes debug symbols.
#
# NOTE: executable paths are hardcoded, but they will change if any of the
# following are changed:
# - hscli version (in cabal file)
# - ghc version
# - optimization level
#
# cabal doesn't offer a programmatic way to access binary locations, and the artifact upload action doesn't offer filepath globbing.
#
# "Where are my build products?"
# https://www.haskell.org/cabal/users-guide/nix-local-build.html#where-are-my-build-products
name: Build & Test
on: [push]

jobs:
  build-ubuntu:
    name: build-ubuntu
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - uses: actions/cache@v1
      name: Cache cabal store
      with:
        path: ~/.cabal/store
        key: ubuntu-cabal-store

    - name: Install ghcup
      run: |
        mkdir -p ~/.ghcup/bin && curl https://gitlab.haskell.org/haskell/ghcup/raw/master/ghcup > ~/.ghcup/bin/ghcup && chmod +x ~/.ghcup/bin/ghcup
        echo "::add-path::$HOME/.ghcup/bin"
        echo "::add-path::$HOME/.cabal/bin"

    - name: Install ghc/cabal
      run: |
        ghcup install 8.8.2
        ghcup set 8.8.2
        ghcup install-cabal

    - name: Install dependencies
      run: |
        cabal update
        cabal configure --project-file=cabal.project.ci -O2 --enable-tests
        cabal build --project-file=cabal.project.ci --only-dependencies

    - name: Build
      run: |
        cabal build --project-file=cabal.project.ci

    - name: Run tests
      run: |
        cabal test --project-file=cabal.project.ci

    - name: Strip binary
      run: |
        strip dist-newstyle/build/x86_64-linux/ghc-8.8.2/hscli-0.1.0.0/x/hscli/opt/build/hscli/hscli

    - uses: actions/upload-artifact@v1
      with:
        name: hscli-linux
        path: dist-newstyle/build/x86_64-linux/ghc-8.8.2/hscli-0.1.0.0/x/hscli/opt/build/hscli/hscli

# build-linux:
#   name: build-linux
#   runs-on: ubuntu-latest
#   container: quay.io/fossa/haskell-static-alpine

#   steps:
#   - uses: actions/checkout@v2

#   - uses: actions/cache@v1
#     name: Cache cabal store
#     with:
#       path: ~/.cabal/store
#       key: ${{ runner.os }}-cabal-store

#   - name: Install dependencies
#     run: |
#       cabal update
#       cabal configure --project-file=cabal.project.ci -O2 --enable-tests
#       cabal build --project-file=cabal.project.ci --only-dependencies

#   - name: Build
#     run: |
#       cabal build --project-file=cabal.project.ci

#   - name: Run tests
#     run: |
#       cabal test --project-file=cabal.project.ci

#   - name: Strip binary
#     run: |
#       strip dist-newstyle/build/x86_64-linux/ghc-8.8.2/hscli-0.1.0.0/x/hscli/opt/build/hscli/hscli

#   - uses: actions/upload-artifact@v1
#     with:
#       name: hscli-linux
#       path: dist-newstyle/build/x86_64-linux/ghc-8.8.2/hscli-0.1.0.0/x/hscli/opt/build/hscli/hscli

  build-macos:
    name: build-macos
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v2

    - uses: actions/cache@v1
      name: Cache cabal store
      with:
        path: ~/.cabal/store
        key: ${{ runner.os }}-cabal-store

    - name: Install ghcup
      run: |
        mkdir -p ~/.ghcup/bin && curl https://gitlab.haskell.org/haskell/ghcup/raw/master/ghcup > ~/.ghcup/bin/ghcup && chmod +x ~/.ghcup/bin/ghcup
        echo "::add-path::$HOME/.ghcup/bin"
        echo "::add-path::$HOME/.cabal/bin"

    - name: Install ghc/cabal
      run: |
        ghcup install 8.8.2
        ghcup set 8.8.2
        ghcup install-cabal

    - name: Install dependencies
      run: |
        cabal update
        cabal configure --project-file=cabal.project.ci -O2 --enable-tests
        cabal build --project-file=cabal.project.ci --only-dependencies

    - name: Build
      run: |
        cabal build --project-file=cabal.project.ci

    - name: Run tests
      run: |
        cabal test --project-file=cabal.project.ci

    - name: Strip binary
      run: |
        strip dist-newstyle/build/x86_64-osx/ghc-8.8.2/hscli-0.1.0.0/x/hscli/opt/build/hscli/hscli

    - uses: actions/upload-artifact@v1
      with:
        name: hscli-osx
        path: dist-newstyle/build/x86_64-osx/ghc-8.8.2/hscli-0.1.0.0/x/hscli/opt/build/hscli/hscli

  build-windows:
    name: build-windows
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2

    - uses: actions/cache@v1
      name: Cache cabal store
      with:
        path: ~/AppData/Roaming/cabal/store
        key: ${{ runner.os }}-cabal-store

    - name: Install ghc/cabal
      run: |
        choco install ghc --version=8.8.2
        echo '::add-path::C:\ProgramData\chocolatey\lib\ghc\tools\ghc-8.8.2\bin'

    - name: Install dependencies
      run: |
        cabal update
        cabal configure --project-file=cabal.project.ci -O2 --enable-tests
        cabal build --project-file=cabal.project.ci --only-dependencies

    - name: Build
      run: |
        cabal build --project-file=cabal.project.ci

    - name: Run tests
      run: |
        cabal test --project-file=cabal.project.ci

    - name: Strip binary
      run: |
        strip dist-newstyle/build/x86_64-windows/ghc-8.8.2/hscli-0.1.0.0/x/hscli/opt/build/hscli/hscli.exe

    - uses: actions/upload-artifact@v1
      with:
        name: hscli-windows.exe
        path: dist-newstyle/build/x86_64-windows/ghc-8.8.2/hscli-0.1.0.0/x/hscli/opt/build/hscli/hscli.exe
