name: installation-script-test
on: push

jobs:
  install-script-test:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - uses: actions/checkout@v2

      - name: install script performs installation in linux and macOs
        if: startsWith(matrix.os,'ubuntu') || startsWith(matrix.os,'macOS') 
        shell: bash
        run: |
          ./install.sh -b .
          ./fossa --version
          rm fossa

      - name: install-v1 script does not install v2 or greater version in linux and macOs
        if: startsWith(matrix.os,'ubuntu') || startsWith(matrix.os,'macOS') 
        shell: bash
        run: |
          ./install-v1.sh -b .
          ./fossa --version | cut -d " " -f 3 | head -c 1 | grep -q '1' || exit 1
          rm fossa

      - name: install script performs installation in windows
        if: startsWith(matrix.os,'windows')
        shell: pwsh
        run: |
          Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope LocalMachine
          .\install.ps1
          fossa.exe --version

      - name: install-v1 script does not install v2 or greater version in windows
        if: startsWith(matrix.os,'windows')
        shell: pwsh
        run: |
          Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope LocalMachine
          .\install-v1.ps1
          $cliVersionCmdOutput = cmd /c 'C:\ProgramData\fossa-cli\fossa.exe' '--version'
          Write-Output $cliVersionCmdOutput
          $cliVersionMajor = $cliVersionCmdOutput.Split(" ")[2][0]
          if (-Not $cliVersionMajor -eq "1") {
            Write-Output "Got: $cliVersionMajor instead!"
            exit 1
          }